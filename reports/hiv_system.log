Traceback (most recent call last):
  File "/Users/cshenderson/miniconda3/envs/book/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/cshenderson/miniconda3/envs/book/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/cshenderson/miniconda3/envs/book/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/cshenderson/miniconda3/envs/book/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/cshenderson/miniconda3/envs/book/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/Users/cshenderson/miniconda3/envs/book/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/cshenderson/miniconda3/envs/book/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/cshenderson/miniconda3/envs/book/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
## preamble : This part loads the packages that we will use

import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt

# function that returns dz/dt
def model(z,t,kr1,kr2,kr3,kr4,kr5,kr6):
    
    #kr1 = 1e5 #= new healthy cells per year
    #kr2 = 0.1 #= death rate of healthy cells
    #kr3 = 2e-7 #= healthy cells converting to infected cells
    #kr4 = 0.5 #= death rate of infected cells
    #kr5 = 5 #= death rate of virus
    #kr6 = 100 #= production of virus by infected cells
    
    H = z[0]
    I = z[1]
    V = z[2]
    dHdt = kr1-kr2*H-kr3*H*V
    dIdt = kr3*H*V-kr4*I 
    dVdt = -kr3*H*V-kr5*V+kr6*I
    dzdt = [dHdt,dIdt,dVdt]
    return dzdt

# initial condition
z0 = [1e6,0,100]


# number of time points
n = 401

# time points
t = np.linspace(0,40,n)

# solve ODE
z = odeint(model,z0,t,args=(1e5,0.1,2e-7,0.5,5,100))

# plot results
plt.semilogy(t,z[:,0],'b-',label='H(t)')
plt.semilogy(t,z[:,1],'r--',label='I(t)')
plt.semilogy(t,z[:,2],'k',label='V(t)')
plt.ylabel('values')
plt.xlabel('time')
plt.legend(loc='best')
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 4>[0;34m()[0m
[1;32m      1[0m [38;5;66;03m## preamble : This part loads the packages that we will use[39;00m
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[0;32m----> 4[0m [38;5;28;01mfrom[39;00m [38;5;21;01mscipy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mintegrate[39;00m [38;5;28;01mimport[39;00m odeint
[1;32m      5[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m      7[0m [38;5;66;03m# function that returns dz/dt[39;00m

[0;31mModuleNotFoundError[0m: No module named 'scipy'
ModuleNotFoundError: No module named 'scipy'

